package org.panacea.drmp.hag.domain.graph;

import org.springframework.lang.NonNull;

import java.util.HashSet;
import java.util.Objects;
import java.util.Set;

public class HExploitRepr {

    private String source;
    private String destination;

    @NonNull
    private Set<Vulnerability> vulnerabilities;

    public HExploitRepr(String source, String destination) {
        this.source = source;
        this.destination = destination;
    }

    public Set<Vulnerability> getVulnerabilities() {
        return vulnerabilities;
    }

    public String getSource() {
        return source;
    }

    public String getDestination() {
        return destination;
    }

    public void addVulnerability(Vulnerability vulnerability) {
        if (this.vulnerabilities == null) {
            this.vulnerabilities = new HashSet<>();
        }
        this.vulnerabilities.add(vulnerability);
    }

    @Override
    public String toString() {
        return "HExploitRepr{" +
                "source='" + source + '\'' +
                ", destination='" + destination + '\'' +
                ", vulnerabilities=" + vulnerabilities +
                '}';
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        HExploitRepr that = (HExploitRepr) o;
        return Objects.equals(source, that.source) &&
                Objects.equals(destination, that.destination);
    }

    @Override
    public int hashCode() {
        return Objects.hash(source, destination);
    }
}
